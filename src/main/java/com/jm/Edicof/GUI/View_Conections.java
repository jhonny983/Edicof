/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jm.Edicof.GUI;

import com.jm.Edicof.Encriptar.Encriptar;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Johnnatan
 */
public class View_Conections extends javax.swing.JDialog {
    ArrayList array_conections = new ArrayList();    
    String[] conection =null;
    String path_file_option;
    /**
     * Creates new form VIew_Conections
     */
    public View_Conections(java.awt.Frame parent, boolean modal, String path_option) {
        super(parent, modal);
        initComponents();
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/group_gear.png"));
        setIconImage(icon);
        this.path_file_option = path_option;
        clear(table_conections);
        array_conections = load_file_conection(path_file_option);
        DefaultTableModel modelo = (DefaultTableModel)table_conections.getModel();
        Object [] fila = new Object[3];
        String[] param;
        for(int i = 0; i<array_conections.size();i++){
            modelo.addRow(fila);
            param = (String[])array_conections.get(i);
            modelo.setValueAt(param[1],table_conections.getRowCount()-1,0);
            modelo.setValueAt(param[0],table_conections.getRowCount()-1,1);
            modelo.setValueAt(param[2],table_conections.getRowCount()-1,2);
        }
        //load_conections(path_file_option);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_conections = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btn_seleccionar = new javax.swing.JButton();
        btn_agregar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Conexiones disponibles");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles"));

        table_conections.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Host", "Usuario BD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_conections.setToolTipText("Seleccione una conexion con doble-click o Enter.");
        table_conections.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_conectionsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_conections);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones de Bases de Datos"));

        btn_seleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/accept_1.png"))); // NOI18N
        btn_seleccionar.setText("Seleccionar");
        btn_seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_seleccionarActionPerformed(evt);
            }
        });

        btn_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel_1.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_seleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(btn_seleccionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_cancelar)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_conectionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_conectionsMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2){
            sel_conection();
        }
    }//GEN-LAST:event_table_conectionsMouseClicked

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        // TODO add your handling code here:
        Opciones_Add_conection ac = new Opciones_Add_conection(this, true);
        ac.setLocationRelativeTo(null);
        ac.setVisible(true);
        String[]aux=ac.getParam();
        if (!aux[0].equals("")) {
            add_con(aux);
            array_conections.add(aux);
            update_file_config(path_file_option);
        }
        
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_seleccionarActionPerformed
        // TODO add your handling code here:
        sel_conection();
    }//GEN-LAST:event_btn_seleccionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_Conections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_Conections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_Conections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_Conections.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                View_Conections dialog = new View_Conections(new javax.swing.JFrame(), true, new String());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_seleccionar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_conections;
    // End of variables declaration//GEN-END:variables
//    public int get_lines_file(File f){
//        int l=0;
//        String aux;
//        try{
//            FileReader fr = new FileReader (f);
//            BufferedReader br = new BufferedReader(fr);
//            while((aux=br.readLine())!=null){
//                l++;
//            }
//
//        }catch(Exception e){
//            e.printStackTrace();
//            JOptionPane.showMessageDialog(null,e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
//        }
//        return l;
//    }
    public void clear(JTable t){
        DefaultTableModel modelo = (DefaultTableModel)t.getModel();
        while(t.getRowCount()!=0){
            modelo.removeRow(t.getRowCount()-1);
        }
    }
    public void load_conections(String p){
        DefaultTableModel modelo = (DefaultTableModel)table_conections.getModel();
        Object [] fila = new Object[3];
        String[] param;
        String aux;
        String temp;
        File archivo = new File(p);
        if(archivo.exists()){
            try{
                FileReader fr = new FileReader (archivo);
                BufferedReader br = new BufferedReader(fr);
                while((aux=br.readLine())!=null){
                    modelo.addRow(fila);
                    temp = Encriptar.Desencriptar(aux);
                    param=temp.split("\\*");
                    array_conections.add(param);
                    modelo.setValueAt(param[1],table_conections.getRowCount()-1,0);
                    modelo.setValueAt(param[0],table_conections.getRowCount()-1,1);
                    modelo.setValueAt(param[2],table_conections.getRowCount()-1,2);
                }
                br.close();
                fr.close();
            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    public void add_con(String[]c){
        DefaultTableModel modelo = (DefaultTableModel)table_conections.getModel();
        Object [] fila = new Object[3];
        modelo.addRow(fila);
        modelo.setValueAt(c[1],table_conections.getRowCount()-1,0);
        modelo.setValueAt(c[0],table_conections.getRowCount()-1,1);
        modelo.setValueAt(c[2],table_conections.getRowCount()-1,2);
        
    }
    public ArrayList get_connections(){
        return array_conections;
    }
    public void update_file_config(String p){
        FileWriter fw;
        PrintWriter pw;
        File archivo=new File(p);
        archivo.setWritable(true);
            try {
                archivo.setWritable(true);
                fw = new FileWriter(archivo);
                pw = new PrintWriter(fw);
                for (int i = 0; i < array_conections.size(); i++) {
                    String [] c= (String[])array_conections.get(i);
                    pw.println(Encriptar.Encriptar(c[0]+"*"+c[1]+"*"+c[2]+"*"+c[3]));//+"*"+c[4]+"*"+c[5]+"*"+c[6]+"*"+c[7]+"*"+c[8]+"*"+c[9]+"*"+c[10]
                }
                archivo.setReadable(true);
                fw.close();
                pw.close();
                JOptionPane.showMessageDialog(this,"Configuracion de conexiones guardada", "Confirmacion",JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException | HeadlessException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,ex, "Error",JOptionPane.ERROR_MESSAGE);
            }
    }
    public String[] getConection() {
        return conection;
    }
    public void sel_conection(){
        if (table_conections.getSelectedRow()!=-1) {
                Main.conection_list=array_conections;
                for (int i = 0; i < array_conections.size(); i++) {
                    String [] p= (String[])array_conections.get(i);
                    if (p[1].equals(table_conections.getValueAt(table_conections.getSelectedRow(), 0))) {
                        //JOptionPane.showMessageDialog(null,p[0]+"\n"+p[1]+"\n"+p[2]+"\n"+p[3]+"\n"+p[4]+"\n"+p[5]+"\n"+p[6]+"\n"+p[7]+"\n"+p[8]+"\n"+p[9]+"\n"+p[10]+"\n", "Error",JOptionPane.INFORMATION_MESSAGE);
                        conection=p;
                        Main.num_conection=table_conections.getSelectedRow();
                        //Main.conex.setText(p[1]);
                        this.dispose();
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null,"Se debe seleccionar una conexión para continuar", "Error",JOptionPane.ERROR_MESSAGE);
            }
    }
    public ArrayList load_file_conection(String r){
        ArrayList ret = new ArrayList();
        String[] con;
        String aux;
        String temp;
        File arc = new File(r);
        if(arc.exists()){
            try{
                FileReader fr = new FileReader (arc);
                BufferedReader br = new BufferedReader(fr);
                while((aux=br.readLine())!=null){
                    temp = Encriptar.Desencriptar(aux);
                    con=temp.split("\\*");
                    ret.add(con);
                }
                br.close();
                fr.close();
                
            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        return ret;
    }
}
