/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jm.Edicof.GUI;

import com.jm.Edicof.Clases.AutoCompletion;
import com.jm.Edicof.Clases.Conexion;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class Buscar_Empleado extends javax.swing.JDialog {
static DefaultTableModel modelo = new DefaultTableModel();
Object [] fila = new Object[5];
    /**
     * Creates new form Busc_Empleado
     */
    public Buscar_Empleado(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        //setUndecorated(true); 
        getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/group_gear.png")));
        ac_all();
        modelo = (DefaultTableModel)empleados.getModel(); 
        while(empleados.getRowCount()!=0){
            modelo.removeRow(empleados.getRowCount()-1);
        }
        empleados.setModel(modelo);
    }
    public Buscar_Empleado(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        //setUndecorated(true); 
        getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/group_gear.png")));
        ac_all();
        modelo = (DefaultTableModel)empleados.getModel(); 
        while(empleados.getRowCount()!=0){
            modelo.removeRow(empleados.getRowCount()-1);
        }
        empleados.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cb_cedula = new javax.swing.JComboBox<>();
        cb_nombre1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cb_apellido1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cb_apellido2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cb_nombre2 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        empleados = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        jMenuItem2.setText("Eliminar de lista Vetados");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user_delete.png"))); // NOI18N
        jMenuItem1.setText("Eliminar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar Empleado");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Criterio de busqueda"));

        jLabel1.setText("Cedula");

        AutoCompletion.enable(cb_cedula);
        cb_cedula.setEditable(true);

        AutoCompletion.enable(cb_nombre1);
        cb_nombre1.setEditable(true);

        jLabel2.setText("Primer nombre");

        AutoCompletion.enable(cb_apellido1);
        cb_apellido1.setEditable(true);

        jLabel3.setText("Primer apellido");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/table_tab_search.png"))); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Segundo apellido");

        AutoCompletion.enable(cb_apellido2);
        cb_apellido2.setEditable(true);

        jLabel5.setText("Segundo nombre");

        AutoCompletion.enable(cb_nombre2);
        cb_nombre2.setEditable(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)))
                    .addComponent(cb_nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(cb_apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_apellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cb_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cb_apellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados de la busqueda"));

        empleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre 1", "Nombre 2", "Apellido 1", "Apellido 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        empleados.setComponentPopupMenu(jPopupMenu1);
        empleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                empleadosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                empleadosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(empleados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel_1.png"))); // NOI18N
        jButton4.setText("Cerrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String strsql="";
        clear_empleados();
        Conexion con = new Conexion();
        con.conexion();
        ResultSet r;
        if (!cb_cedula.getSelectedItem().equals("Seleccione..")) {
            strsql="SELECT * FROM T_EMPLEADOS WHERE ID_EMP="+cb_cedula.getSelectedItem()+" ORDER BY ID_EMP ASC;";
        }else{
            if (!cb_nombre1.getSelectedItem().equals("Seleccione..")) {
                strsql="SELECT * FROM T_EMPLEADOS WHERE NOMBRE_1_EMP='"+cb_nombre1.getSelectedItem()+"' ORDER BY ID_EMP ASC;";
            }else{
                if (!cb_nombre2.getSelectedItem().equals("Seleccione..")) {
                    strsql="SELECT * FROM T_EMPLEADOS WHERE NOMBRE_2_EMP='"+cb_nombre2.getSelectedItem()+"' ORDER BY ID_EMP ASC;";
                }else{
                    if (!cb_apellido1.getSelectedItem().equals("Seleccione..")) {
                        strsql="SELECT * FROM T_EMPLEADOS WHERE APELLIDO_1_EMP='"+cb_apellido1.getSelectedItem()+"' ORDER BY ID_EMP ASC;";
                    }else{
                        if (!cb_apellido2.getSelectedItem().equals("Seleccione..")) {
                            strsql="SELECT * FROM T_EMPLEADOS WHERE APELLIDO_2_EMP='"+cb_apellido2.getSelectedItem()+"' ORDER BY ID_EMP ASC;";
                        }
                    }
                }
            }
        }
        try {
            r = con.s.executeQuery(strsql);    
            while (r.next()) {
                modelo.addRow(fila);
                empleados.setModel(modelo);
                modelo.setValueAt(r.getString("ID_EMP"),empleados.getRowCount()-1,0);
                modelo.setValueAt(r.getString("NOMBRE_1_EMP"),empleados.getRowCount()-1,1);
                modelo.setValueAt(r.getString("NOMBRE_2_EMP"),empleados.getRowCount()-1,2);
                modelo.setValueAt(r.getString("APELLIDO_1_EMP"),empleados.getRowCount()-1,3);
                modelo.setValueAt(r.getString("APELLIDO_2_EMP"),empleados.getRowCount()-1,4);
            }
            con.cerrar();
        } catch (SQLException e) {
            con.cerrar();
            JOptionPane.showMessageDialog(this,e,"Error",JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        //evt.get
        if (Main.rol.getText().equals("ADMINISTRADOR") | Main.rol.getText().equals("MASTER")) {
            Conexion con = new Conexion();
            con.conexion();
            ResultSet r;
            try {
                int conf = JOptionPane.showConfirmDialog(this,"Esta seguro que desea eliminar al empleado?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                if (conf == JOptionPane.YES_OPTION) {
                    modelo = (DefaultTableModel)empleados.getModel(); 
                    r = con.s.executeQuery ("SELECT COUNT(ID_EMPLEADO) FROM t_novedades WHERE ID_EMPLEADO ="+modelo.getValueAt(empleados.getSelectedRow(),0));
                    if (r.getInt("COUNT(ID_EMPLEADO)")>0) {
                        JOptionPane.showMessageDialog(this,"El empleado no puede ser eliminado porque ya tiene novedades registradas","Error",JOptionPane.ERROR_MESSAGE);
                    }else{
                        con.s.executeUpdate("DELETE FROM T_EMPLEADOS WHERE ID_EMP="+modelo.getValueAt(empleados.getSelectedRow(), 0));
                        JOptionPane.showMessageDialog(this,"El empleado fue eliminado correctamente","Información",JOptionPane.INFORMATION_MESSAGE);
                        con.cerrar();
                        this.dispose();
                    }
                }
            } catch (HeadlessException | SQLException e) {
                con.cerrar();
                e.printStackTrace();
                JOptionPane.showMessageDialog(this,e,"Error",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null,"No tiene permisos para esta opcion.","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void empleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empleadosMouseClicked
        // TODO add your handling code here:
        System.out.println("MouseClicked");
        
    }//GEN-LAST:event_empleadosMouseClicked

    private void empleadosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empleadosMousePressed
        // TODO add your handling code here:
        System.out.println("MousePressed");
        if (evt.getButton() == MouseEvent.BUTTON3) {
            System.out.println("BOTON 3");
            Point p = evt.getPoint();
            int rowNumber = empleados.rowAtPoint( p );
            int colNumber = empleados.columnAtPoint(p);
            empleados.changeSelection(rowNumber, colNumber, false, false);
            empleados.requestFocus();
        }
    }//GEN-LAST:event_empleadosMousePressed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Conexion con = new Conexion();
        con.conexion();
        ResultSet r;
        try {
            int conf = JOptionPane.showConfirmDialog(this,"Esta seguro que desea eliminar al empleado de la lista de Vetados?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
            if (conf == JOptionPane.YES_OPTION) {
                modelo = (DefaultTableModel)empleados.getModel(); 
                r = con.s.executeQuery ("SELECT * FROM t_vetados WHERE ID_EMPLEADO = "+modelo.getValueAt(empleados.getSelectedRow(),0));
                if (r.next()) {
                    con.s.executeUpdate("DELETE FROM t_vetados WHERE ID_EMPLEADO = "+modelo.getValueAt(empleados.getSelectedRow(),0));
                    JOptionPane.showMessageDialog(this,"El empleado fue eliminado de la lista correctamente","Información",JOptionPane.INFORMATION_MESSAGE);
                    con.cerrar();
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(this,"El empleado no puede ser eliminado porque no existe en la lista de vetados.","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
            }
        } catch (HeadlessException | SQLException e) {
            con.cerrar();
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,e,"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buscar_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buscar_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buscar_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buscar_Empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Buscar_Empleado dialog = new Buscar_Empleado(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_apellido1;
    private javax.swing.JComboBox<String> cb_apellido2;
    private javax.swing.JComboBox<String> cb_cedula;
    private javax.swing.JComboBox<String> cb_nombre1;
    private javax.swing.JComboBox<String> cb_nombre2;
    private javax.swing.JTable empleados;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
public void ac_all(){
    cb_cedula.removeAllItems();
    cb_cedula.addItem("Seleccione..");
    cb_nombre1.removeAllItems();
    cb_nombre1.addItem("Seleccione..");
    cb_nombre2.removeAllItems();
    cb_nombre2.addItem("Seleccione..");
    cb_apellido1.removeAllItems();
    cb_apellido1.addItem("Seleccione..");
    cb_apellido2.removeAllItems();
    cb_apellido2.addItem("Seleccione..");
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS ORDER BY ID_EMP ASC;");
        while(r.next()){
            String str1=r.getString("ID_EMP");
            cb_cedula.addItem(str1);
        }
        r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS GROUP BY NOMBRE_1_EMP ORDER BY NOMBRE_1_EMP ASC;");
        while(r.next()){
            String str2=r.getString("NOMBRE_1_EMP");
            if (!str2.equals("")) {
                cb_nombre1.addItem(str2);
            }
        }
        r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS GROUP BY NOMBRE_2_EMP ORDER BY NOMBRE_2_EMP ASC;");
        while(r.next()){
            String str3=r.getString("NOMBRE_2_EMP");
            if (!str3.equals("")) {
                cb_nombre2.addItem(str3);
            }
        }
        r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS GROUP BY APELLIDO_1_EMP ORDER BY APELLIDO_1_EMP ASC;");
        while(r.next()){
            String str4=r.getString("APELLIDO_1_EMP");
            if (!str4.equals("")) {
                cb_apellido1.addItem(str4);
            }
        }
        r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS GROUP BY APELLIDO_2_EMP ORDER BY APELLIDO_2_EMP ASC;");
        while(r.next()){
            String str5=r.getString("APELLIDO_2_EMP");
            if (!str5.equals("")) {
                cb_apellido2.addItem(str5);
            }
        }
        con.cerrar();
    }catch(SQLException j){
        con.cerrar();
        JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
    }
}
public void clear_empleados(){
    modelo = (DefaultTableModel)empleados.getModel(); 
    while(empleados.getRowCount()!=0){
        modelo.removeRow(empleados.getRowCount()-1);
    }
    empleados.setModel(modelo);
}


}
