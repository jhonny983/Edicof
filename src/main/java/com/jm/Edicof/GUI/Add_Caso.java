/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jm.Edicof.GUI;

import com.jm.Edicof.Clases.AutoCompletion;
import com.jm.Edicof.Clases.Conexion;
import com.mxrck.autocompleter.AutoCompleterCallback;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Johnnatan
 */
public class Add_Caso extends javax.swing.JDialog {
    TextAutoCompleter tac_empleador = null;
    TextAutoCompleter tac_nit = null;
    DefaultTableModel modelo;
    Object [] fila = new Object[2];
    
    /**
     * Creates new form Add_caso
     */
    public Add_Caso(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/group_gear.png")));
        this.setLocationRelativeTo(null);
        init();
        ac_usuario();
        ac_empleador();
        ac_tipo();
        ac_cedula();
        tac_empleador.setMode(0);
        tac_nit.setMode(0);
    }
    public void init(){
        tac_empleador = new TextAutoCompleter(t_empleador, new AutoCompleterCallback() {
        @Override
        public void callback(Object selectedItem) {
            Conexion con = new Conexion();
            con.conexion();
            ResultSet r;
            try{
                r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS WHERE NOMBRE_EMPRESA='"+selectedItem+"'");
                if(r.next()){
                    t_nit.setText(r.getString("ID_EMPRESA"));
                }
                con.cerrar();
            }catch(SQLException j){
                con.cerrar();
                j.printStackTrace();
                JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        });
        tac_nit = new TextAutoCompleter(t_nit, new AutoCompleterCallback() {
        @Override
        public void callback(Object selectedItem) {
            Conexion con = new Conexion();
            con.conexion();
            ResultSet r;
            try{
                r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS WHERE ID_EMPRESA='"+selectedItem+"'");
                if(r.next()){
                    t_empleador.setText(r.getString("NOMBRE_EMPRESA"));
                }
                con.cerrar();
            }catch(SQLException j){
                con.cerrar();
                j.printStackTrace();
                JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cb_tipo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        t_empleador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        t_nit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cb_empleados = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_descripcion = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        t_empleados = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Empleados asignados"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar caso PQR");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Información"));

        jLabel1.setText("Tipo de caso");

        cb_tipo.setEditable(true);
        AutoCompletion.enable(cb_tipo);
        ((JLabel)cb_tipo.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        cb_tipo.setToolTipText("Digite el tipo de caso");

        jLabel2.setText("Empresa");

        t_empleador.setEditable(false);
        t_empleador.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t_empleador.setToolTipText("Digite el nombre de la empresa asignada al caso");

        jLabel5.setText("NIT");

        t_nit.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setText("Cedula empleado");

        cb_empleados.setEditable(true);
        AutoCompletion.enable(cb_empleados);
        ((JLabel)cb_empleados.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cb_tipo, 0, 182, Short.MAX_VALUE)
                    .addComponent(t_nit))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_empleados, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(t_empleador, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(t_nit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(t_empleador, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(cb_empleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripción general"));

        t_descripcion.setColumns(20);
        t_descripcion.setRows(5);
        jScrollPane1.setViewportView(t_descripcion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Empleados asignados"));
        jPanel5.setPreferredSize(new java.awt.Dimension(401, 215));

        t_empleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(t_empleados);
        if (t_empleados.getColumnModel().getColumnCount() > 0) {
            t_empleados.getColumnModel().getColumn(0).setMinWidth(150);
            t_empleados.getColumnModel().getColumn(0).setPreferredWidth(150);
            t_empleados.getColumnModel().getColumn(0).setMaxWidth(150);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel_1.png"))); // NOI18N
        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/accept_1.png"))); // NOI18N
        jButton3.setText("Aceptar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int option;
        if (!cb_empleados.getSelectedItem().toString().equals("Seleccione..")) {
            Conexion con = new Conexion();
            con.conexion();
            ResultSet r;
            try{
                r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS WHERE ID_EMP="+cb_empleados.getSelectedItem().toString());
                if(r.next()){
                    String str1=r.getString("ID_EMP");
                    String str2=r.getString("APELLIDO_1_EMP")+" "+r.getString("APELLIDO_2_EMP")+" "+r.getString("NOMBRE_1_EMP")+" "+r.getString("NOMBRE_2_EMP");
                    option = JOptionPane.showConfirmDialog(this,"Esta seguro que desea asiganar al empleado\n"+str2+"al caso?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                    if (option==JOptionPane.YES_OPTION) {
                        modelo = (DefaultTableModel)t_empleados.getModel();
                        modelo.addRow(fila);
                        modelo.setValueAt(str1,t_empleados.getRowCount()-1,0);
                        modelo.setValueAt(str2,t_empleados.getRowCount()-1,1);
                    }
                }else{
                     JOptionPane.showMessageDialog(null,"Seleccione una cedula valida","Error",JOptionPane.ERROR_MESSAGE);
                }
                con.cerrar();
            }catch(SQLException j){
                con.cerrar();
                j.printStackTrace();
                JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null,"Seleccione una cedula valida","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (check_nit(t_nit.getText())) {
            if (!cb_tipo.getSelectedItem().toString().equals("Seleccione..")) {
                if (!t_descripcion.getText().equals("") & !t_descripcion.getText().equals(" ")) {
                    if (t_empleados.getRowCount()==0) {
                        int conf = JOptionPane.showConfirmDialog(this,"No hay ningun empleado (trabajador) asociado al caso que desea radicar\nEsta seguro que desea continuar?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                        if (conf == JOptionPane.YES_OPTION) {
                            int conf1 = JOptionPane.showConfirmDialog(this,"La información esta completa\nEsta seguro que desea continuar?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                            if (conf1 == JOptionPane.YES_OPTION) {
                                Conexion con = new Conexion();
                                con.conexion();
                                ResultSet r;
                                long rad;
                                try {
                                    String tipo_caso = "SELECT ID_TIPO_CASO FROM T_TIPO_CASO_PQR WHERE NOMBRE_TIPO ='"+cb_tipo.getSelectedItem().toString()+"'";
                                    String sql = "INSERT INTO `t_caso_pqr`(`ID_TIPO_CASO`, `ID_EMPRESA`, `ID_USUARIO`, `ID_USU_ASIG`, `DESCRIPCION_CASO`, `ID_ESTADO_CASO`, `FECHA_CASO`) VALUES (("+tipo_caso+"),'"+t_nit.getText()+"',"+Main.id_usuario+",(999999999),'"+t_descripcion.getText()+"',1,'"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())+"')";
                                    int resultado = con.s.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
                                    if (resultado==1) {
                                        r = con.s.getGeneratedKeys();
                                        if (r.next()) {
                                            rad = r.getLong(1);
                                            con.s.executeUpdate("INSERT INTO `t_evolucion_pqr`(`ID_CASO`, `TRATAMIENTO`, `FECHA_EVO`, `ID_USUARIO`) VALUES ("+rad+",'CASO CREADO POR "+Main.login.getText()+"','"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())+"',"+Main.id_usuario+")");
                                        }
                                    }
                                    con.cerrar();
                                    dispose();
                                }catch (SQLException e) {
                                    con.cerrar();
                                    e.printStackTrace();
                                    JOptionPane.showMessageDialog(this,e,"Información",JOptionPane.ERROR_MESSAGE);
                                }
                            }
                        }
                    }else{
                        int conf1 = JOptionPane.showConfirmDialog(this,"La información esta completa\nEsta seguro que desea continuar?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                        if (conf1 == JOptionPane.YES_OPTION) {
                            Conexion con = new Conexion();
                            con.conexion();
                            ResultSet r;
                            long rad;
                            try {
                                String tipo_caso = "SELECT ID_TIPO_CASO FROM T_TIPO_CASO_PQR WHERE NOMBRE_TIPO ='"+cb_tipo.getSelectedItem().toString()+"'";
                                String sql = "INSERT INTO `t_caso_pqr`(`ID_TIPO_CASO`, `ID_EMPRESA`, `ID_USUARIO`, `ID_USU_ASIG`, `DESCRIPCION_CASO`, `ID_ESTADO_CASO`, `FECHA_CASO`) VALUES (("+tipo_caso+"),'"+t_nit.getText()+"',"+Main.id_usuario+",(999999999),'"+t_descripcion.getText()+"',1,'"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())+"')";
                                int resultado = con.s.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
                                if (resultado==1) {
                                    r = con.s.getGeneratedKeys();
                                    if (r.next()) {
                                        rad = r.getLong(1);
                                        con.s.executeUpdate("INSERT INTO `t_evolucion_pqr`(`ID_CASO`, `TRATAMIENTO`, `FECHA_EVO`, `ID_USUARIO`) VALUES ("+rad+",'CASO CREADO POR "+Main.login.getText()+"','"+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())+"',"+Main.id_usuario+")");
                                        System.out.println("Resultado: "+rad);
                                        for (int i = 0; i < t_empleados.getRowCount(); i++) {
                                            con.s.executeUpdate("INSERT INTO `t_casos_empleados`(`ID_EMPLEADO`, `ID_CASO`) VALUES ("+t_empleados.getValueAt(i, 0)+","+rad+")");
                                        }
                                    }
                                }
                                
                                JOptionPane.showMessageDialog(this,"El caso ha sido ingresado correctamente.","Información",JOptionPane.INFORMATION_MESSAGE);
                                con.cerrar();
                                dispose();
                            }catch (SQLException e) {
                                con.cerrar();
                                e.printStackTrace();
                                JOptionPane.showMessageDialog(this,e,"Información",JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Ingrese un texto descriptivo del caso a radicar.","Error",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Seleccione un tipo de caso valido","Error",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un NIT valido","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Add_Caso dialog = new Add_Caso(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_empleados;
    private javax.swing.JComboBox<String> cb_tipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea t_descripcion;
    private javax.swing.JTextField t_empleador;
    private javax.swing.JTable t_empleados;
    private javax.swing.JTextField t_nit;
    // End of variables declaration//GEN-END:variables
    public void ac_usuario(){
//        cb_usuario.removeAllItems();
//        cb_usuario.addItem("Seleccione..");
//        Conexion con = new Conexion();
//        con.conexion();
//        ResultSet r;
//        try{
//            r = con.s.executeQuery ("SELECT * FROM t_usuarios ORDER BY USUARIO_USUARIO ASC;");
//            while(r.next()){
//                String str=r.getString("USUARIO_USUARIO");
//                cb_usuario.addItem(str);
//            }
//            con.cerrar();
//        }catch(SQLException j){
//            con.cerrar();
//            JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
//        }
    }
    public void ac_tipo(){
        cb_tipo.removeAllItems();
        cb_tipo.addItem("Seleccione..");
        Conexion con = new Conexion();
        con.conexion();
        ResultSet r;
        try{
            r = con.s.executeQuery ("SELECT * FROM t_tipo_caso_pqr ORDER BY NOMBRE_TIPO ASC;");
            while(r.next()){
                String str=r.getString("NOMBRE_TIPO");
                cb_tipo.addItem(str);
            }
            con.cerrar();
        }catch(SQLException j){
            con.cerrar();
            j.printStackTrace();
            JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }
    public void ac_empleador(){
        tac_nit.removeAllItems();
        tac_nit.addItem("Seleccione..");
        tac_empleador.removeAllItems();
        tac_empleador.addItem("Seleccione..");
        Conexion con = new Conexion();
        con.conexion();
        ResultSet r;
        try{
            r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS ORDER BY NOMBRE_EMPRESA ASC;");
            while(r.next()){
                tac_empleador.addItem(r.getString("NOMBRE_EMPRESA"));
                tac_nit.addItem(r.getString("ID_EMPRESA"));
            }
            con.cerrar();
        }catch(SQLException j){
            con.cerrar();
            j.printStackTrace();
            JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    public boolean check_nit(Object nit){
        boolean ret=false;
        Conexion con = new Conexion();
        con.conexion();
        ResultSet r;
        try{
            r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS WHERE ID_EMPRESA = '"+nit.toString()+"'");
            ret = r.next();
            con.cerrar();
        }catch(SQLException j){
            con.cerrar();
            j.printStackTrace();
            JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
        }
        return ret;
    }
    public boolean check_empresa(Object nomb){
        boolean ret=false;
        Conexion con = new Conexion();
        con.conexion();
        ResultSet r;
        try{
            r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS WHERE NOMBREE_EMPRESA = '"+nomb.toString()+"'");
            ret = r.next();
            con.cerrar();
        }catch(SQLException j){
            con.cerrar();
            j.printStackTrace();
            JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
        }
        return ret;
    }
    public void ac_cedula(){
    cb_empleados.removeAllItems();
    cb_empleados.addItem("Seleccione..");
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS ORDER BY ID_EMP ASC;");
        while(r.next()){
            String str=r.getString("ID_EMP");
            cb_empleados.addItem(str);
        }
        con.cerrar();
    }catch(SQLException j){
        con.cerrar();
        j.printStackTrace();
        JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
    }
}

}
