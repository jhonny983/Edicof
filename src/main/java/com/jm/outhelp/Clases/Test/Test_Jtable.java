/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jm.outhelp.Clases.Test;

import com.jm.outhelp.Clases.Conexion;
import com.mxrck.autocompleter.AutoCompleterCallback;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author ADMIN
 */
public class Test_Jtable extends javax.swing.JDialog {
DefaultTableModel modelo = null;
DefaultCellEditor dce = null;
//////////---------------------------------
Java2sAutoTextField cb = null;
JTextField text_cedula = null;
//////////---------------------------------
TextAutoCompleter tac_cedula_table = null;
//////////---------------------------------
String before_edit_cell = null;

    /**
     * Creates new form Test_Jtable
     */
    public Test_Jtable(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        jTable1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
//        ArrayList<String> listSomeString = new ArrayList<String>();
//        listSomeString.add("-");
//        listSomeString.add("Snowboarding");
//        listSomeString.add("Rowing");
//        listSomeString.add("Knitting");
//        listSomeString.add("Speed reading");
//        listSomeString.add("Pool");
//        listSomeString.add("None of the above");
//        cb = new Java2sAutoTextField(listSomeString);
        text_cedula = new JTextField();
        text_cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyPressed(java.awt.event.KeyEvent evt) {
                char a=evt.getKeyChar();
                int b=evt.getKeyCode();
                System.out.println("text_cedula_pressed: '"+a+"'("+b+")");
                if (a==KeyEvent.VK_TAB) {
                    evt.setKeyCode(10);
                }else{
                    if(a==KeyEvent.VK_ESCAPE) {
                        System.out.println("ESC");
                        String aux = text_cedula.getText();
                        System.out.println("Antes: "+aux);
                        if (aux!=null) {
                            System.out.println("aux no null");
                            text_cedula.setText(before_edit_cell);
                            evt.setKeyCode(10);
                        }
                    }
                }
            }
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                char a=evt.getKeyChar();
                int b=evt.getKeyCode();
                System.out.println("text_cedula_Released: '"+a+"'("+b+")");
                if (a==KeyEvent.VK_TAB | a==KeyEvent.VK_ENTER ) {
                    if (jTable1.isEditing()){
                        jTable1.getCellEditor().stopCellEditing();
                    }
                    if (jTable1.getSelectedColumn()!=(jTable1.getColumnCount()-1)) {
                        jTable1.changeSelection(jTable1.getSelectedRow(),jTable1.getSelectedColumn()+1, false, false);
                        jTable1.requestFocus();
                    }
                }else{
                    if (a==KeyEvent.VK_ESCAPE) {
                        if (jTable1.isEditing()){
                            jTable1.getCellEditor().stopCellEditing();
                        }
                    }
                }
            }
        });
        //cb.isEditable();
        init();
        cb_cedula();
        tac_cedula_table.setMode(0);
        TableColumn column0 = jTable1.getColumnModel().getColumn(0);
        TableCellEditor tce0 = new DefaultCellEditor(text_cedula);
        column0.setCellEditor(tce0);
    }
    public void init(){
        tac_cedula_table = new TextAutoCompleter(text_cedula, new AutoCompleterCallback() {
        @Override
        public void callback(Object selectedItem) {
            //load_data_barrio(selectedItem.toString());
        }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setCellSelectionEnabled(true);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
            char a=evt.getKeyChar();
            int b=evt.getKeyCode();
            System.out.println("Key Released Tabla: '"+a+"'("+b+")");
            //System.out.println("Longitud: "+((JTextField) jTable1.getEditorComponent()).getText().length());
            if (jTable1.getEditingColumn()==2) {
                Calendar c = new GregorianCalendar();
                String annio = Integer.toString(c.get(Calendar.YEAR));
                switch (((JTextField) jTable1.getEditorComponent()).getText().length()) {
                    case 6:
                        if (KeyEvent.VK_ENTER == b) {
                            ((JTextField) jTable1.getEditorComponent()).setText(((JTextField) jTable1.getEditorComponent()).getText() + annio);
                        }   break;
                    case 10:
                        if (KeyEvent.VK_ENTER == b) {
                            
                        }   break;
                    default:
                        break;
                }
            }
        
//        char a=evt.getKeyChar();
//        int b=evt.getKeyCode();
//        System.out.println("Key Pressed Tabla: '"+a+"'("+b+")");
//        if((b>=96 & b<=105)|(b>=65 & b<=90)) {
//            System.out.println("alpha");
//            modelo = (DefaultTableModel) jTable1.getModel();
//            String aux = (String)modelo.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn());
//            if (aux!=null) {
//                System.out.println("Longitud: "+aux.length());
//                if (aux.length()>0) {
//                    before_edit_cell= aux;
//                    System.out.println("Nuevo valor de la celda: "+before_edit_cell);
//                    modelo.setValueAt("",jTable1.getSelectedRow(),jTable1.getSelectedColumn());
//                    jTable1.setModel(modelo);
//                    jTable1.requestFocus();
//                }
//            }else{
//                before_edit_cell = "";
//            }
//        }else{
//            if(a==KeyEvent.VK_DELETE) {
//                System.out.println("DEL");
//                modelo = (DefaultTableModel) jTable1.getModel();
//                modelo.setValueAt("",jTable1.getSelectedRow(),jTable1.getSelectedColumn());
//                jTable1.setModel(modelo);
//                before_edit_cell = "";
//                if (jTable1.isEditing()){
//                    jTable1.getCellEditor().stopCellEditing();
//                }
//                evt.consume();
//            }else{
//                if(a==KeyEvent.VK_ESCAPE) { 
//                    System.out.println("ESC");
//                    modelo = (DefaultTableModel) jTable1.getModel();
//                    String aux = (String)modelo.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn());
//                    System.out.println("Antes: "+aux);
//                    if (aux!=null) {
//                        System.out.println("aux no null");
//                        if (jTable1.isEditing()){
//                            System.out.println("recuperando dato");
//                            modelo.setValueAt(before_edit_cell,jTable1.getSelectedRow(),jTable1.getSelectedColumn());
//                            jTable1.setModel(modelo);
//                            jTable1.getCellEditor().cancelCellEditing();
//                        }else{
//                            evt.consume();
//                        }
//                        evt.consume();
//                    }else{
//                        if (jTable1.isEditing()){
//                            jTable1.getCellEditor().cancelCellEditing();
//                        }
//                        evt.consume();
//                    }
//                }
//            }
//        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
//        char a=evt.getKeyChar();
//        int b=evt.getKeyCode();
//        System.out.println("Key Typed Tecla: '"+a+"'("+b+")");
//        if(a==KeyEvent.VK_DELETE) { 
//            modelo = (DefaultTableModel) jTable1.getModel();
//            modelo.setValueAt("",jTable1.getSelectedRow(),jTable1.getSelectedColumn());
//            jTable1.setModel(modelo);
//        }
    }//GEN-LAST:event_jTable1KeyTyped

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        // TODO add your handling code here:
        //System.out.println("Digitos: "+);
            char a=evt.getKeyChar();
            int b=evt.getKeyCode();
            System.out.println("Key Released Tabla: '"+a+"'("+b+")");
            //System.out.println("Longitud: "+((JTextField) jTable1.getEditorComponent()).getText().length());
            if (jTable1.getEditingColumn()==2) {
                switch (((JTextField) jTable1.getEditorComponent()).getText().length()) {
                    case 2:
                        ((JTextField) jTable1.getEditorComponent()).setText(((JTextField) jTable1.getEditorComponent()).getText() + "-");
                        break;
                    case 5:
                        ((JTextField) jTable1.getEditorComponent()).setText(((JTextField) jTable1.getEditorComponent()).getText() + "-");
                        break;
                    default:
                        break;
                }
            }
        //System.out.println("Digitos: "+modelo.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()).toString().length());
    }//GEN-LAST:event_jTable1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test_Jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test_Jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test_Jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test_Jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Test_Jtable dialog = new Test_Jtable(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

//    
public void cb_cedula(){
    tac_cedula_table.removeAllItems();
    Conexion con = new Conexion("127.0.0.1","e_occidente","root","jhonny3029735");
    con.conexion();
    ResultSet r;
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EMPLEADOS ORDER BY ID_EMP ASC;");
        while(r.next()){
            String str=r.getString("ID_EMP");
            tac_cedula_table.addItem(str);
        }
        con.cerrar();
    }catch(SQLException j){
        con.cerrar();
        j.printStackTrace();
        JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
    }
    }
}
