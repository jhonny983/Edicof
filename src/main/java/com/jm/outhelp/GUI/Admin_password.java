/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jm.outhelp.GUI;

import com.jm.outhelp.GUI.*;
import com.jm.outhelp.Clases.Conexion;
import com.mxrck.autocompleter.AutoCompleterCallback;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Event;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author ADMIN
 */
public class Admin_password extends javax.swing.JDialog {
TextAutoCompleter tac_nit = null;
TextAutoCompleter tac_nombre = null;
DefaultListModel listModel_eps = new DefaultListModel();
DefaultListModel listModel_ent = new DefaultListModel();
    /**
     * Creates new form Admin_password
     * @param parent
     * @param modal
     */
    public Admin_password(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/group_gear.png")));
        init();
        ac_nit();
        ac_nombre();
        tac_nit.setMode(0);
        tac_nombre.setMode(0);
        InputMap map1 = nit.getInputMap(nit.WHEN_FOCUSED);
        map1.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");
    }
    public void init(){
        tac_nit = new TextAutoCompleter(nit, new AutoCompleterCallback() {
        @Override
        public void callback(Object selectedItem) {
            nombre_empresa.setText(get_nombre_empleador(selectedItem));
            load_pass(selectedItem);
        }
        });
        tac_nombre = new TextAutoCompleter(nombre_empresa, new AutoCompleterCallback() {
        @Override
        public void callback(Object selectedItem) {
            nit.setText(get_id_empleador(selectedItem));
            load_pass(nit.getText());
        }
        });
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu_clave_eps = new javax.swing.JPopupMenu();
        show_eps = new javax.swing.JMenuItem();
        add_eps = new javax.swing.JMenuItem();
        edd_eps = new javax.swing.JMenuItem();
        del_eps = new javax.swing.JMenuItem();
        menu_clave_ent = new javax.swing.JPopupMenu();
        show_ent = new javax.swing.JMenuItem();
        add_ent = new javax.swing.JMenuItem();
        edd_ent = new javax.swing.JMenuItem();
        del_ent = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        nit = new javax.swing.JTextField();
        nombre_empresa = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_eps = new javax.swing.JList<>(listModel_eps);
        jScrollPane2 = new javax.swing.JScrollPane();
        list_entidades = new javax.swing.JList<>(listModel_ent);
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        show_eps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eye.png"))); // NOI18N
        show_eps.setText("Visualizar");
        show_eps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_epsActionPerformed(evt);
            }
        });
        menu_clave_eps.add(show_eps);

        add_eps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        add_eps.setText("Agregar");
        add_eps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_epsActionPerformed(evt);
            }
        });
        menu_clave_eps.add(add_eps);

        edd_eps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow_refresh.png"))); // NOI18N
        edd_eps.setText("Editar");
        edd_eps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edd_epsActionPerformed(evt);
            }
        });
        menu_clave_eps.add(edd_eps);

        del_eps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        del_eps.setText("Eliminar");
        del_eps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_epsActionPerformed(evt);
            }
        });
        menu_clave_eps.add(del_eps);

        show_ent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eye.png"))); // NOI18N
        show_ent.setText("Visualizar");
        show_ent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_entActionPerformed(evt);
            }
        });
        menu_clave_ent.add(show_ent);

        add_ent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        add_ent.setText("Agregar");
        add_ent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_entActionPerformed(evt);
            }
        });
        menu_clave_ent.add(add_ent);

        edd_ent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow_refresh.png"))); // NOI18N
        edd_ent.setText("Editar");
        edd_ent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edd_entActionPerformed(evt);
            }
        });
        menu_clave_ent.add(edd_ent);

        del_ent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        del_ent.setText("Eliminar");
        del_ent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_entActionPerformed(evt);
            }
        });
        menu_clave_ent.add(del_ent);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrar claves");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));

        jLabel2.setText("NIT");

        jLabel1.setText("Nombre Empresa");

        nit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nitKeyTyped(evt);
            }
        });

        nombre_empresa.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nombre_empresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombre_empresaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(nit, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 188, Short.MAX_VALUE))
                        .addComponent(nombre_empresa, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 89, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nombre_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addContainerGap(19, Short.MAX_VALUE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos adicionales"));

        jLabel11.setText("Claves EPS's");

        jLabel12.setText("Claves otras entidades");

        list_eps.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list_eps.setToolTipText("Click derecho para ver opciones");
        list_eps.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_epsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list_eps);
        list_eps.setComponentPopupMenu(menu_clave_eps);

        list_entidades.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list_entidades.setToolTipText("Click derecho para ver opciones");
        list_entidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_entidadesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(list_entidades);
        list_entidades.setComponentPopupMenu(menu_clave_ent);

        jButton1.setText("Crear EPS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar EPS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Crear Entidad");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Editar Entidad");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nitKeyTyped
        // TODO add your handling code here:
        char a=evt.getKeyChar();
        if(a!=KeyEvent.VK_MINUS){
            if(!(a>=KeyEvent.VK_0 && a<=KeyEvent.VK_9)) {
                evt.consume();
            }
        }
        if(nit.getText().length()>15){
            evt.consume();
        }
    }//GEN-LAST:event_nitKeyTyped

    private void nombre_empresaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre_empresaKeyTyped
        // TODO add your handling code here:
        char a=evt.getKeyChar();
        a = Character.toUpperCase(a);
        if(!(a>=KeyEvent.VK_A && a<=KeyEvent.VK_Z) & a!=KeyEvent.VK_SPACE & a!=209) {
            evt.consume();
        }
        if(nombre_empresa.getText().length()>50){
            evt.consume();
        }
    }//GEN-LAST:event_nombre_empresaKeyTyped

    private void add_epsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_epsActionPerformed
        // TODO add your handling code here:
        Password_EPS pas = new Password_EPS(this, true, nit.getText(), nombre_empresa.getText(), 1, "");
        pas.setLocationRelativeTo(this);
        pas.setVisible(true);
        load_pass(nit.getText());
    }//GEN-LAST:event_add_epsActionPerformed

    private void show_epsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_epsActionPerformed
        // TODO add your handling code here:
        if (list_eps.getSelectedIndex()!=-1) {
            if (!list_eps.getSelectedValue().equals("SIN CLAVES")) {
                Password_EPS pas = new Password_EPS(this, true, nit.getText(), nombre_empresa.getText(), 2, get_id_eps(list_eps.getSelectedValue()));
                pas.setLocationRelativeTo(this);
                pas.setVisible(true);
            }
        }
        
        
    }//GEN-LAST:event_show_epsActionPerformed

    private void edd_epsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edd_epsActionPerformed
        // TODO add your handling code here:
        if (list_eps.getSelectedIndex()!=-1) {
            if (!list_eps.getSelectedValue().equals("SIN CLAVES")) {
                Password_EPS pas = new Password_EPS(this, true, nit.getText(), nombre_empresa.getText(), 3, get_id_eps(list_eps.getSelectedValue()));
                pas.setLocationRelativeTo(this);
                pas.setVisible(true);
                load_pass(nit.getText());
            }
        }
        
        
    }//GEN-LAST:event_edd_epsActionPerformed

    private void del_epsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_epsActionPerformed
        // TODO add your handling code here:
        if (list_eps.getSelectedIndex()!=-1) {
            if (!list_eps.getSelectedValue().equals("SIN CLAVES")) {
                if (Main.rol.getText().equals("ADMINISTRADOR") | Main.rol.getText().equals("MASTER") ) {
                    int conf = JOptionPane.showConfirmDialog(this,"Esta seguro que desea continuar?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                    if (conf == JOptionPane.YES_OPTION) {
                        Conexion con = new Conexion();
                        con.conexion();
                        try {
                            con.s.executeUpdate("DELETE FROM `t_claves_eps` WHERE ID_EMPRESA ='"+nit.getText()+"' AND ID_EPS="+get_id_eps(list_eps.getSelectedValue()));
                            JOptionPane.showMessageDialog(this,"La clave fue eliminada correctamente","Información",JOptionPane.INFORMATION_MESSAGE);
                            con.cerrar();
                            load_pass(nit.getText());
                        } catch (SQLException | HeadlessException e) {
                            con.cerrar();
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this,e,"Error",JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"No tiene permisos para esta opcion.","Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        
    }//GEN-LAST:event_del_epsActionPerformed

    private void list_epsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_epsMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            if (list_eps.getSelectedIndex()!=-1) {
                if (!list_eps.getSelectedValue().equals("SIN CLAVES")) {
                    Password_EPS pas = new Password_EPS(this, true, nit.getText(), nombre_empresa.getText(), 2, get_id_eps(list_eps.getSelectedValue()));
                    pas.setLocationRelativeTo(this);
                    pas.setVisible(true);
                }
            }
            
            
        }
    }//GEN-LAST:event_list_epsMouseClicked

    private void list_entidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_entidadesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            if (list_entidades.getSelectedIndex()!=-1) {
                if (!list_entidades.getSelectedValue().equals("SIN CLAVES")) {
                    Password_Entidades pas = new Password_Entidades(this, true, nit.getText(), nombre_empresa.getText(), 2, get_id_eps(list_entidades.getSelectedValue()));
                    pas.setLocationRelativeTo(this);
                    pas.setVisible(true);
                }
            }
            
            
        }
    }//GEN-LAST:event_list_entidadesMouseClicked

    private void show_entActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_entActionPerformed
        // TODO add your handling code here:
        if (list_entidades.getSelectedIndex()!=-1) {
            if (!list_entidades.getSelectedValue().equals("SIN CLAVES")) {
                Password_Entidades pas = new Password_Entidades(this, true, nit.getText(), nombre_empresa.getText(), 2, get_id_ent(list_entidades.getSelectedValue()));
                pas.setLocationRelativeTo(this);
                pas.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_show_entActionPerformed

    private void add_entActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_entActionPerformed
        // TODO add your handling code here:
        Password_Entidades pas = new Password_Entidades(this, true, nit.getText(), nombre_empresa.getText(), 1, "");
        pas.setLocationRelativeTo(this);
        pas.setVisible(true);
        load_pass(nit.getText());
    }//GEN-LAST:event_add_entActionPerformed

    private void edd_entActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edd_entActionPerformed
        // TODO add your handling code here:
        if (!list_entidades.getSelectedValue().equals("SIN CLAVES")) {
            Password_Entidades pas = new Password_Entidades(this, true, nit.getText(), nombre_empresa.getText(), 3, get_id_ent(list_entidades.getSelectedValue()));
            pas.setLocationRelativeTo(this);
            pas.setVisible(true);
            load_pass(nit.getText());
        }
    }//GEN-LAST:event_edd_entActionPerformed

    private void del_entActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_entActionPerformed
        // TODO add your handling code here:
        if (!list_entidades.getSelectedValue().equals("SIN CLAVES")) {
            if (Main.rol.getText().equals("ADMINISTRADOR") | Main.rol.getText().equals("MASTER") ) {
                int conf = JOptionPane.showConfirmDialog(this,"Esta seguro que desea continuar?","Confirmación",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                if (conf == JOptionPane.YES_OPTION) {
                    Conexion con = new Conexion();
                    con.conexion();
                    try {
                        con.s.executeUpdate("DELETE FROM `t_claves_entidades` WHERE ID_EMPRESA ='"+nit.getText()+"' AND ID_ENTIDAD="+get_id_ent(list_entidades.getSelectedValue()));
                        JOptionPane.showMessageDialog(this,"La clave fue eliminada correctamente","Información",JOptionPane.INFORMATION_MESSAGE);
                        con.cerrar();
                        load_pass(nit.getText());
                    } catch (SQLException | HeadlessException e) {
                        con.cerrar();
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(this,e,"Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null,"No tiene permisos para esta opcion.","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_del_entActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Add_EPS add_eps = new Add_EPS(this, true);
        add_eps.setLocationRelativeTo(this);
        add_eps.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Edd_EPS edd_eps = new Edd_EPS(this, true);
        edd_eps.setLocationRelativeTo(this);
        edd_eps.setVisible(true);
        load_pass(nit.getText());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Add_Entidad add_ent = new Add_Entidad(this, true);
        add_ent.setLocationRelativeTo(this);
        add_ent.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Edd_Entidad edd_ent = new Edd_Entidad(this, true);
        edd_ent.setLocationRelativeTo(this);
        edd_ent.setVisible(true);
        load_pass(nit.getText());
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Admin_password dialog = new Admin_password(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem add_ent;
    private javax.swing.JMenuItem add_eps;
    private javax.swing.JMenuItem del_ent;
    private javax.swing.JMenuItem del_eps;
    private javax.swing.JMenuItem edd_ent;
    private javax.swing.JMenuItem edd_eps;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list_entidades;
    private javax.swing.JList<String> list_eps;
    private javax.swing.JPopupMenu menu_clave_ent;
    private javax.swing.JPopupMenu menu_clave_eps;
    private static javax.swing.JTextField nit;
    private static javax.swing.JTextField nombre_empresa;
    private javax.swing.JMenuItem show_ent;
    private javax.swing.JMenuItem show_eps;
    // End of variables declaration//GEN-END:variables
public void ac_nit(){
    tac_nit.removeAllItems();
    tac_nit.addItem("Seleccione..");
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS ORDER BY ID_EMPRESA ASC;");
        while(r.next()){
            String str=r.getString("ID_EMPRESA");
            tac_nit.addItem(str);
        }
        con.cerrar();
    }catch(SQLException j){
        con.cerrar();
        JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
    }
} 
public void ac_nombre(){
    tac_nombre.removeAllItems();
    tac_nombre.addItem("Seleccione..");
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS ORDER BY ID_EMPRESA ASC;");
        while(r.next()){
            String str=r.getString("NOMBRE_EMPRESA");
            tac_nombre.addItem(str);
        }
        con.cerrar();
    }catch(SQLException j){
        con.cerrar();
        JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
    }
} 
public void load_pass(Object obj){
    listModel_eps.clear();
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    try {
        r = con.s.executeQuery ("SELECT *\n" +
                                "FROM\n" +
                                "    t_claves_eps\n" +
                                "    INNER JOIN t_eps \n" +
                                "        ON (t_claves_eps.ID_EPS = t_eps.ID_EPS)" +
                                "WHERE ID_EMPRESA = '"+obj.toString()+"'");
        if (r.next()) {
            r.beforeFirst();
            while(r.next()){
                listModel_eps.addElement(r.getString("NOMBRE_EPS"));
            }
            //list_eps.setModel(listModel_eps);
        }else{
            listModel_eps.addElement("SIN CLAVES");
        }
        list_eps.setSelectedIndex(0);
        listModel_ent.clear();
        r = con.s.executeQuery ("SELECT *\n" +
                                "FROM\n" +
                                "    t_claves_entidades\n" +
                                "    INNER JOIN t_entidades \n" +
                                "        ON (t_claves_entidades.ID_ENTIDAD = t_entidades.ID_ENTIDAD)" +
                                "WHERE ID_EMPRESA = '"+obj.toString()+"'");
        if (r.next()) {
            r.beforeFirst();
            while(r.next()){
                listModel_ent.addElement(r.getString("NOMBRE_ENTIDAD"));
            }
            //list_entidades.setModel(listModel_ent);
        }else{
            listModel_ent.addElement("SIN CLAVES");
        }
        list_entidades.setSelectedIndex(0);
        con.cerrar();
    } catch (SQLException | HeadlessException e) {
        con.cerrar();
        e.printStackTrace();
        JOptionPane.showMessageDialog(this,e,"Error",JOptionPane.ERROR_MESSAGE);
    }

}
public String get_id_empleador(Object emp){
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    String i = "";
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS WHERE NOMBRE_EMPRESA='"+emp.toString().trim()+"'");
        if(r.next()){
            i = r.getString("ID_EMPRESA");
        }else{
            i="";
        }
        con.cerrar();
    }catch(SQLException j){
        i="";
        con.cerrar();
        j.printStackTrace();
    }
    return i;
}
public String get_nombre_empleador(Object emp){
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    String i = "";
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EMPRESAS WHERE ID_EMPRESA='"+emp.toString().trim()+"'");
        if(r.next()){
            i = r.getString("NOMBRE_EMPRESA");
        }else{
            i="";
        }
        con.cerrar();
    }catch(SQLException j){
        i="";
        con.cerrar();
        j.printStackTrace();
    }
    return i;
}
public String get_id_eps(Object eps){
    String i = "";
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    try{
        r = con.s.executeQuery ("SELECT * FROM T_EPS WHERE NOMBRE_EPS='"+eps+"'");
        if(r.next()){
            i = r.getString("ID_EPS");
        }else{
            i="";
        }
        con.cerrar();
    }catch(SQLException j){
        i="";
        con.cerrar();
        j.printStackTrace();
    }
    return i;
}
public String get_id_ent(Object ent){
    String i = "";
    Conexion con = new Conexion();
    con.conexion();
    ResultSet r;
    try{
        r = con.s.executeQuery ("SELECT * FROM T_ENTIDADES WHERE NOMBRE_ENTIDAD='"+ent+"'");
        if(r.next()){
            i = r.getString("ID_ENTIDAD");
        }else{
            i="";
        }
        con.cerrar();
    }catch(SQLException j){
        i="";
        con.cerrar();
        j.printStackTrace();
    }
    return i;
}

}
    // End of variables declaration                   
