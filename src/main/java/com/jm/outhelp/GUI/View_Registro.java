/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jm.outhelp.GUI;

import com.jm.outhelp.GUI.*;
import com.jm.outhelp.Clases.Conexion;
import com.jm.outhelp.Clases.TableModelRegistro;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Johnnatan
 */
public class View_Registro extends javax.swing.JDialog {
    String ced="";
    String nit="";
    Date f_ing=null;
    Date f_ret=null;
    String tip="";
    Object [] fila = new Object[4];
    DefaultTableModel modelo = new TableModelRegistro(new Object [][] {}, new String [] { "Transacción", 
                                                                                "Fecha Transacción", 
                                                                                "Fecha Registro", 
                                                                                "Usuario"});
    /**
     * Creates new form View_Registro
     */
    public View_Registro(javax.swing.JDialog parent, boolean modal, String empl, String emp, Object f_i, Object f_r, String t) {
        super(parent, modal);
        initComponents();
        ///////////////////////*******************************
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/group_gear.png")));
        ///////////////////////*******************************
        this.ced=empl;
        this.nit=emp;
        this.f_ing=(Date) f_i;
        this.f_ret=(Date)f_r;
        this.tip=t;
        DefaultTableCellRenderer tcr = new FormatRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer tcr1 = new FormatRenderer1();
        tcr1.setHorizontalAlignment(SwingConstants.CENTER);
        registro.getColumnModel().getColumn(0).setCellRenderer(tcr);
        registro.getColumnModel().getColumn(1).setCellRenderer(tcr1);
        registro.getColumnModel().getColumn(2).setCellRenderer(tcr);
        registro.getColumnModel().getColumn(3).setCellRenderer(tcr);
        cargar_registros(ced,nit,f_ing,f_ret,tip);
    
    
    }
    public class FormatRenderer extends DefaultTableCellRenderer{

        public FormatRenderer(){
        
        }
        @Override
        public void setValue(Object value)
	{
            try{
                if (value != null ){
                    if (value instanceof java.util.Date) {
                        value = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss aa").format(value);
                    }
                }
            }catch(IllegalArgumentException e) {
                e.printStackTrace();
            }
            super.setValue(value);
	}
    }
    public class FormatRenderer1 extends DefaultTableCellRenderer{

        public FormatRenderer1(){
        
        }
        @Override
        public void setValue(Object value)
	{
            try{
                if (value != null ){
                    if (value instanceof java.util.Date) {
                        value = new SimpleDateFormat("dd-MM-yyyy").format(value);
                    }
                }
            }catch(IllegalArgumentException e) {
                e.printStackTrace();
            }
            super.setValue(value);
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        registro = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Transacciones");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro historico"));

        registro.setAutoCreateRowSorter(true);
        registro.setModel(modelo);
        jScrollPane1.setViewportView(registro);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel_1.png"))); // NOI18N
        jButton4.setText("Cerrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                View_Registro dialog = new View_Registro(new javax.swing.JDialog(), true, new String(),new String(),new Object(),new Object(), new String());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable registro;
    // End of variables declaration//GEN-END:variables

    private void cargar_registros(String ced, String nit, Date f_ing, Date f_ret, String tip) {
        clear_novedades();
        Conexion con = new Conexion();
        con.conexion();
        ResultSet r;
        try{
            r = con.s.executeQuery ("SELECT *\n" +
                                    "FROM \n" +
                                    "t_registro\n" +
                                    "    INNER JOIN t_novedades \n" +
                                    "        ON (t_registro.ID_EMPLEADO = t_novedades.ID_EMPLEADO) AND (t_registro.ID_EMPRESA = t_novedades.ID_EMPRESA) AND (t_registro.F_INGRESO = t_novedades.FECHA_INGRESO) AND (t_registro.ID_TIPO = t_novedades.ID_TIPO) AND (t_registro.F_RETIRO = t_novedades.FECHA_RETIRO)\n" +
                                    "    INNER JOIN t_tipo_novedad \n" +
                                    "        ON (t_novedades.ID_TIPO = t_tipo_novedad.ID_TIPO)\n" +
                                    "    INNER JOIN t_usuarios \n" +
                                    "        ON (t_registro.ID_USUARIO = t_usuarios.ID_USUARIO)\n" +
                                    "WHERE t_registro.ID_EMPLEADO = "+ced+"\n" +
                                    "AND t_registro.ID_EMPRESA = '"+nit+"'\n" +
                                    "AND t_registro.F_INGRESO = '"+new SimpleDateFormat("yyyy-MM-dd").format(f_ing)+"'\n" +
                                    "AND t_registro.F_RETIRO = '"+new SimpleDateFormat("yyyy-MM-dd").format(f_ret)+"'\n" +
                                    "AND t_tipo_novedad.NOMBRE_TIPO = '"+tip+"'\n" +
                                    "ORDER BY t_registro.F_REGISTRO DESC;");
            while(r.next()){
                
                modelo.addRow(fila);
                modelo.setValueAt(r.getString("REGISTRO"),registro.getRowCount()-1,0);
                modelo.setValueAt(new SimpleDateFormat("yyyy-MM-dd").parse(r.getString("FECHA")),registro.getRowCount()-1,1);
                //modelo.setValueAt(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(r.getString("F_REGISTRO")),registro.getRowCount()-1,2);
                modelo.setValueAt(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(r.getString("F_REGISTRO")),registro.getRowCount()-1,2);
                modelo.setValueAt(r.getString("USUARIO_USUARIO"),registro.getRowCount()-1,3);
            }
            con.cerrar();
        }catch(SQLException | ParseException j){
            con.cerrar();
            JOptionPane.showMessageDialog(null,j,"Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    public void clear_novedades(){
        while(registro.getRowCount()!=0){
            modelo.removeRow(registro.getRowCount()-1);
        }
    }
}
